{"ast":null,"code":"var _jsxFileName = \"/Users/kaylei/work/chester/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport * as Icon from \"react-feather\";\nimport \"./App.scss\";\nimport About from \"./pages/About\";\nimport BlogDetails from \"./pages/BlogDetails\";\nimport Blogs from \"./pages/Blogs\";\nimport Contact from \"./pages/Contact\";\nimport Home from \"./pages/Home\";\nimport Notfound from \"./pages/Notfound\";\nimport Portfolios from \"./pages/Portfolios\";\nimport Resumes from \"./pages/Resumes\";\nimport { RouterProvider } from \"react-router-dom\";\nimport { createBrowserRouter } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [lightMode, setLightMode] = useState(false); // Made it true if you want to load your site light mode primary\n\n  lightMode ? document.body.classList.add(\"light\") : document.body.classList.remove(\"light\");\n  const handleMode = () => {\n    if (!lightMode) {\n      setLightMode(true);\n      document.body.classList.add(\"light\");\n    } else {\n      setLightMode(false);\n      document.body.classList.remove(\"light\");\n    }\n  };\n  const router = createBrowserRouter([{\n    path: \"/\",\n    element: /*#__PURE__*/_jsxDEV(Home, {\n      lightMode: lightMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 16\n    }, this)\n  }, {\n    path: \"/about\",\n    element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 16\n    }, this)\n  }, {\n    path: \"/resume\",\n    element: /*#__PURE__*/_jsxDEV(Resumes, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 16\n    }, this)\n  }, {\n    path: \"/portfolios\",\n    element: /*#__PURE__*/_jsxDEV(Portfolios, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 16\n    }, this)\n  }, {\n    path: \"/blogs\",\n    element: /*#__PURE__*/_jsxDEV(Blogs, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 16\n    }, this)\n  }, {\n    path: \"/blogs/:id/:title\",\n    element: /*#__PURE__*/_jsxDEV(BlogDetails, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 16\n    }, this)\n  }, {\n    path: \"/contact\",\n    element: /*#__PURE__*/_jsxDEV(Contact, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 16\n    }, this)\n  }, {\n    path: \"*\",\n    element: /*#__PURE__*/_jsxDEV(Notfound, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 16\n    }, this)\n  }]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"light-mode\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"icon\",\n        children: /*#__PURE__*/_jsxDEV(Icon.Sun, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: lightMode ? \"light-mode-switch active\" : \"light-mode-switch\",\n        onClick: () => handleMode()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RouterProvider, {\n      router: router\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"TAl4bMLlSIDmctH7p+vf0+Ai0Rc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Icon","About","BlogDetails","Blogs","Contact","Home","Notfound","Portfolios","Resumes","RouterProvider","createBrowserRouter","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","lightMode","setLightMode","document","body","classList","add","remove","handleMode","router","path","element","fileName","_jsxFileName","lineNumber","columnNumber","children","className","Sun","onClick","_c","$RefreshReg$"],"sources":["/Users/kaylei/work/chester/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport * as Icon from \"react-feather\";\nimport \"./App.scss\";\nimport About from \"./pages/About\";\nimport BlogDetails from \"./pages/BlogDetails\";\nimport Blogs from \"./pages/Blogs\";\nimport Contact from \"./pages/Contact\";\nimport Home from \"./pages/Home\";\nimport Notfound from \"./pages/Notfound\";\nimport Portfolios from \"./pages/Portfolios\";\nimport Resumes from \"./pages/Resumes\";\nimport { RouterProvider } from \"react-router-dom\";\nimport { createBrowserRouter } from \"react-router-dom\";\n\nfunction App() {\n  const [lightMode, setLightMode] = useState(false); // Made it true if you want to load your site light mode primary\n\n  lightMode\n    ? document.body.classList.add(\"light\")\n    : document.body.classList.remove(\"light\");\n\n  const handleMode = () => {\n    if (!lightMode) {\n      setLightMode(true);\n      document.body.classList.add(\"light\");\n    } else {\n      setLightMode(false);\n      document.body.classList.remove(\"light\");\n    }\n  };\n\n  const router = createBrowserRouter([\n    {\n      path: \"/\",\n      element: <Home lightMode={lightMode} />,\n    },\n    {\n      path: \"/about\",\n      element: <About />,\n    },\n    {\n      path: \"/resume\",\n      element: <Resumes />,\n    },\n    {\n      path: \"/portfolios\",\n      element: <Portfolios />,\n    },\n    {\n      path: \"/blogs\",\n      element: <Blogs />,\n    },\n    {\n      path: \"/blogs/:id/:title\",\n      element: <BlogDetails />,\n    },\n    {\n      path: \"/contact\",\n      element: <Contact />,\n    },\n    {\n      path: \"*\",\n      element: <Notfound />,\n    },\n  ]);\n\n  return (\n    <>\n      <div className=\"light-mode\">\n        <span className=\"icon\">\n          <Icon.Sun />\n        </span>\n        <button\n          className={\n            lightMode ? \"light-mode-switch active\" : \"light-mode-switch\"\n          }\n          onClick={() => handleMode()}\n        ></button>\n      </div>\n      <RouterProvider router={router} />\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}